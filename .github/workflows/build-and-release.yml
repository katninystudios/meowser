name: Build and Release Meowser

on:
   schedule:
      - cron: "0 7 * * *" # 12:00 AM MST (UTC+7)

   workflow_dispatch: # Optional, allows manual runs

jobs:
   build-windows:
      runs-on: windows-latest
      steps:
         - name: Checkout repository
           uses: actions/checkout@v3

         - name: Set up Node.js
           uses: actions/setup-node@v3
           with:
              node-version: "18"

         - name: Install dependencies
           run: |
              npm install
              npm install electron-nightly@latest

         - name: Bump Version
           id: bump-version
           run: |
              current_version=$(node -p "require('./package.json').version")
              IFS='.' read -r major minor patch <<< "${current_version#v}"
              new_version="v$major.$minor.$((patch + 1))"
              jq ".version = \"${new_version}\"" package.json > temp.json && mv temp.json package.json
              echo "new_version=${new_version}" >> $GITHUB_ENV

         - name: Build for Windows
           run: npm run dist

         - name: Rename Windows artifact
           run: |
              mkdir renamed-artifacts
              mv dist/*.exe renamed-artifacts/Meowser-Setup-${{ env.new_version }}.exe || true

         - name: Upload artifact
           uses: actions/upload-artifact@v4
           with:
              name: Meowser-Setup-${{ env.new_version }}.exe
              path: renamed-artifacts/Meowser-Setup-${{ env.new_version }}.exe

   build-linux:
      runs-on: ubuntu-latest
      steps:
         - name: Checkout repository
           uses: actions/checkout@v3

         - name: Set up Node.js
           uses: actions/setup-node@v3
           with:
              node-version: "18"

         - name: Install dependencies
           run: |
              npm install
              npm install electron-nightly@latest

         - name: Build for Linux
           run: npm run dist

         - name: Rename Linux artifact
           run: |
              mkdir renamed-artifacts
              mv dist/*.AppImage renamed-artifacts/Meowser-${{ env.new_version }}.AppImage || true

         - name: Upload artifact
           uses: actions/upload-artifact@v4
           with:
              name: Meowser-${{ env.new_version }}.AppImage
              path: renamed-artifacts/Meowser-${{ env.new_version }}.AppImage

   build-macos:
      runs-on: macos-latest
      steps:
         - name: Checkout repository
           uses: actions/checkout@v3

         - name: Set up Node.js
           uses: actions/setup-node@v3
           with:
              node-version: "18"

         - name: Install dependencies
           run: |
              npm install
              npm install electron-nightly@latest

         - name: Build for macOS
           run: npm run dist

         - name: Rename macOS artifact
           run: |
              mkdir renamed-artifacts
              mv dist/*.dmg renamed-artifacts/Meowser-${{ env.new_version }}.dmg || true

         - name: Upload artifact
           uses: actions/upload-artifact@v4
           with:
              name: Meowser-${{ env.new_version }}.dmg
              path: renamed-artifacts/Meowser-${{ env.new_version }}.dmg

   create-release:
      runs-on: ubuntu-latest
      needs: [build-windows, build-linux, build-macos]
      steps:
         - name: Checkout repository
           uses: actions/checkout@v3

         - name: Create GitHub Release
           id: create-release
           uses: actions/create-release@v1
           env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           with:
              tag_name: ${{ env.new_version }}
              release_name: "Version ${{ env.new_version }}"
              body: |
                 Commits included in this release:
                 $(git log --pretty=format:"* %s (%an)" ${GITHUB_SHA}..HEAD)

         - name: Download Windows artifact
           uses: actions/download-artifact@v4
           with:
              name: Meowser-Setup-${{ env.new_version }}.exe

         - name: Upload Windows Release Asset
           uses: actions/upload-release-asset@v1
           with:
              upload_url: ${{ steps.create-release.outputs.upload_url }}
              asset_path: Meowser-Setup-${{ env.new_version }}.exe
              asset_name: Meowser-Setup-${{ env.new_version }}.exe
              label: Meowser Setup for Windows

         - name: Download Linux artifact
           uses: actions/download-artifact@v4
           with:
              name: Meowser-${{ env.new_version }}.AppImage

         - name: Upload Linux Release Asset
           uses: actions/upload-release-asset@v1
           with:
              upload_url: ${{ steps.create-release.outputs.upload_url }}
              asset_path: Meowser-${{ env.new_version }}.AppImage
              asset_name: Meowser-${{ env.new_version }}.AppImage
              label: Meowser AppImage for Linux

         - name: Download macOS artifact
           uses: actions/download-artifact@v4
           with:
              name: Meowser-${{ env.new_version }}.dmg

         - name: Upload macOS Release Asset
           uses: actions/upload-release-asset@v1
           with:
              upload_url: ${{ steps.create-release.outputs.upload_url }}
              asset_path: Meowser-${{ env.new_version }}.dmg
              asset_name: Meowser-${{ env.new_version }}.dmg
              label: Meowser Installer for macOS